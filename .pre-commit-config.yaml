# .pre-commit-config.yaml
repos:
  # isort: Sorts imports according to PEP 8
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"] # To work well with Black's formatting

  # autoflake: Removes unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        args:
          [
            "--in-place",
            "--remove-all-unused-imports",
            "--remove-unused-variables",
            "--expand-star-imports",
            "--remove-duplicate-keys",
            "--ignore-init-module-imports",
          ]
        language_version: python3

  # Ruff: An extremely fast Python linter and formatter, written in Rust
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      - id: ruff

  # Check YAML files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Identify invalid files
      # check whether the files parse as valid python.
      - id: check-ast

      # checks yaml files for parseable syntax.
      - id: check-yaml

      # General quality checks
      # trims trailing whitespace.
      - id: trailing-whitespace

      # replaces or checks mixed line ending
      - id: mixed-line-ending

      # ensures that a file is either empty, or ends with one newline.
      - id: end-of-file-fixer

      # Python checks
      # check for debugger imports and py37+ `breakpoint()` calls in python source.
      - id: debug-statements

      # Git checks
      # detects the presence of private keys
      - id: detect-private-key
      # check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict
      # check for files that contain merge conflict strings.
      - id: check-merge-conflict
      # prevent giant files from being committed
      - id: check-added-large-files
